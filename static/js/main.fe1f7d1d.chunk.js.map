{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","MILITAR_FORMAT","useState","Date","currentDate","setCurrentDate","currentFormat","setCurrentFormat","setInterval","id","date","formatingStyle","format","formatDate","type","name","onChange","checked","htmlFor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAyCeA,MArCf,WACE,IAAMC,EAAiB,WAEvB,EAAsCC,mBAAS,IAAIC,MAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CH,mBAASD,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAMA,OAFAC,aAAY,kBAAMH,EAAe,IAAIF,QAAQ,KAG3C,sBAAKM,GAAG,QAAR,UAEE,+BAPe,SAACC,GAAD,IAAOC,EAAP,uDAAwB,KAAxB,OAAiCC,YAAOF,EAAMC,GAOtDE,CAAWT,EAAaE,KAC/B,sBAAKG,GAAG,UAAR,UACE,uBACEA,GAAG,aACHK,KAAK,QACLC,KAAK,UACLC,SAAU,kBAAKT,EAAiBN,IAChCgB,QAAUX,IAAkBL,IAE9B,uBAAOiB,QAAQ,aAAf,iBACA,uBACET,GAAG,aACHK,KAAK,QACLC,KAAK,UACLC,SAAU,kBAAKT,EAzBD,OA0BdU,QA1Bc,OA0BJX,IAEZ,uBAAOY,QAAQ,aAAf,wBCtBOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fe1f7d1d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { format } from 'date-fns'\nimport './App.css';\n\nfunction App() {\n  const MILITAR_FORMAT = \"kk:mm:ss\";\n  const COMMON_FORMAT = \"pp\";\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [currentFormat, setCurrentFormat] = useState(MILITAR_FORMAT);\n\n  const formatDate = (date, formatingStyle = \"pp\") => format(date, formatingStyle);\n  \n  setInterval(() => setCurrentDate(new Date()),1000);\n\n  return (\n    <div id=\"clock\"> \n    \n      <span>{formatDate(currentDate, currentFormat)}</span>\n      <div id=\"formats\">\n        <input \n          id=\"formato24H\" \n          type=\"radio\" \n          name=\"formato\" \n          onChange={()=> setCurrentFormat(MILITAR_FORMAT)} \n          checked={ currentFormat === MILITAR_FORMAT }\n        />\n        <label htmlFor=\"formato24H\">24H</label>\n        <input \n          id=\"formato12H\" \n          type=\"radio\" \n          name=\"formato\" \n          onChange={()=> setCurrentFormat(COMMON_FORMAT)} \n          checked={ currentFormat === COMMON_FORMAT }\n        />\n        <label htmlFor=\"formato12H\">12H</label>\n      </div>\n    \n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}